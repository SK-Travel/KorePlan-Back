spring.application.name=KorePlan

#Server
server.port=8080
server.servlet.session.timeout=60m

# MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/koreplan_250424?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


# Thymeleaf
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
#spring.thymeleaf.enabled=true
spring.web.resources.static-locations=classpath:/static/

spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.mode=HTML5



# Spring Data JPA
spring.jpa.database=mysql
spring.jpa.generate-ddl=false
#spring.jpa.hibernate.ddl-auto=true
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
logging.level.org.hibernate=info
spring.jpa.open-in-view=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jackson.property-naming-strategy=SNAKE_CASE




# SQL 로그 보기
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# React SPA 라우팅 보호용 (필요 시)
#spring.mvc.throw-exception-if-no-handler-found=true
#spring.web.resources.add-mappings=false


# Gmail 설정
mail.gmail.host=smtp.gmail.com
mail.gmail.port=587
mail.gmail.username=hw000530@gmail.com
mail.gmail.password=eicdfpwosfngxivw
mail.gmail.starttls=true
mail.gmail.ssl=false

# Naver 설정
mail.naver.host=smtp.naver.com
mail.naver.port=465
mail.naver.username=hw0005@naver.com
mail.naver.password=14Z7DLW49M6E
mail.naver.starttls=false
mail.naver.ssl=true

# 구글 회원가입/로그인 API
spring.security.oauth2.client.registration.google.client-id=49339192751-laq0afa39hbr3triud3fj9digslg2sim.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# 리다이렉트 기본 주소
spring.security.oauth2.client.registration.google.client-name=Google

# 로그인 성공 후 기본 리다이렉트 URL
#spring.security.oauth2.client.registration.google.client-authentication-method=post

# Kakao OAuth2 로그인 설정
spring.security.oauth2.client.registration.kakao.client-id=22d634d3ec153c0423dc4f13989ffe5e
#spring.security.oauth2.client.registration.kakao.client-secret=카카오_CLIENT_SECRET_있다면
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
#,email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2 로그인 설정
spring.security.oauth2.client.registration.naver.client-id=fV9DdJbiwS1ASzz8jQng
spring.security.oauth2.client.registration.naver.client-secret=oyVTIlw4Uq
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response



# JWT 시크릿 키
jwt.secret=5/XD7nUCJ2rDolsW25XndeujnCdRhYWtoYVtKid82Z0=